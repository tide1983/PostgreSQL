-- 1. Название и продолжительность самого длительного трека
SELECT 
    название, 
    длительность 
FROM треки 
ORDER BY длительность DESC 
LIMIT 1;

-- 2. Название треков, продолжительность которых не менее 3,5 минут
SELECT 
    название, 
    длительность 
FROM треки 
WHERE EXTRACT(EPOCH FROM длительность) >= 210 
ORDER BY длительность DESC;

-- 3. Названия сборников, вышедших в период с 2018 по 2020 год включительно
SELECT 
    название, 
    год_выпуска 
FROM сборники 
WHERE год_выпуска BETWEEN 2018 AND 2020 
ORDER BY год_выпуска;

-- 4. Исполнители, чьё имя состоит из одного слова
SELECT 
    имя, 
    псевдоним 
FROM исполнители 
WHERE имя NOT LIKE '% %';

-- 5. Название треков, которые содержат слово «мой» или «my»
SELECT 
    название, 
    длительность 
FROM треки 
WHERE название ILIKE '%мой%' OR название ILIKE '%my%';

-- ЗАДАНИЕ 3

-- 1. Количество исполнителей в каждом жанре
SELECT 
    ж.название as жанр,
    COUNT(иж.исполнитель_id) as количество_исполнителей
FROM жанры ж
LEFT JOIN исполнители_жанры иж ON ж.id = иж.жанр_id
GROUP BY ж.id, ж.название
ORDER BY количество_исполнителей DESC;

-- 2. Количество треков, вошедших в альбомы 2019–2020 годов
SELECT 
    COUNT(т.id) as количество_треков
FROM треки т
JOIN альбомы а ON т.альбом_id = а.id
WHERE а.год_выпуска BETWEEN 2019 AND 2020;

-- 3. Средняя продолжительность треков по каждому альбому
SELECT 
    а.название as альбом,
    а.год_выпуска,
    ROUND(AVG(EXTRACT(EPOCH FROM т.длительность)), 2) as средняя_длительность_сек,
    TO_CHAR(AVG(т.длительность), 'MI:SS') as средняя_длительность_формат
FROM альбомы а
JOIN треки т ON а.id = т.альбом_id
GROUP BY а.id, а.название, а.год_выпуска
ORDER BY средняя_длительность_сек DESC;

-- 4. Все исполнители, которые не выпустили альбомы в 2020 году
SELECT 
    и.имя,
    и.псевдоним
FROM исполнители и
WHERE и.id NOT IN (
    SELECT DISTINCT иа.исполнитель_id
    FROM исполнители_альбомы иа
    JOIN альбомы а ON иа.альбом_id = а.id
    WHERE а.год_выпуска = 2020
)
ORDER BY и.имя;

-- 5. Названия сборников, в которых присутствует конкретный исполнитель (Michael Jackson)
SELECT DISTINCT
    с.название as сборник,
    с.год_выпуска,
    и.псевдоним as исполнитель
FROM сборники с
JOIN треки_сборники тс ON с.id = тс.сборник_id
JOIN треки т ON тс.трек_id = т.id
JOIN альбомы а ON т.альбом_id = а.id
JOIN исполнители_альбомы иа ON а.id = иа.альбом_id
JOIN исполнители и ON иа.исполнитель_id = и.id
WHERE и.псевдоним = 'Michael Jackson'
ORDER BY с.год_выпуска;

-- ЗАДАНИЕ 4 (необязательное)

-- 1. Названия альбомов, в которых присутствуют исполнители более чем одного жанра
SELECT 
    а.название as альбом,
    и.псевдоним as исполнитель,
    COUNT(DISTINCT иж.жанр_id) as количество_жанров
FROM альбомы а
JOIN исполнители_альбомы иа ON а.id = иа.альбом_id
JOIN исполнители и ON иа.исполнитель_id = и.id
JOIN исполнители_жанры иж ON и.id = иж.исполнитель_id
GROUP BY а.id, а.название, и.id, и.псевдоним
HAVING COUNT(DISTINCT иж.жанр_id) > 1
ORDER BY количество_жанров DESC;

-- 2. Наименования треков, которые не входят в сборники
SELECT 
    т.название as трек,
    а.название as альбом,
    и.псевдоним as исполнитель
FROM треки т
JOIN альбомы а ON т.альбом_id = а.id
JOIN исполнители_альбомы иа ON а.id = иа.альбом_id
JOIN исполнители и ON иа.исполнитель_id = и.id
WHERE т.id NOT IN (
    SELECT DISTINCT трек_id 
    FROM треки_сборники
)
ORDER BY т.название;

-- 3. Исполнитель или исполнители, написавшие самый короткий по продолжительности трек
SELECT 
    и.псевдоним as исполнитель,
    т.название as трек,
    т.длительность
FROM треки т
JOIN альбомы а ON т.альбом_id = а.id
JOIN исполнители_альбомы иа ON а.id = иа.альбом_id
JOIN исполнители и ON иа.исполнитель_id = и.id
WHERE т.длительность = (
    SELECT MIN(длительность) 
    FROM треки
)
ORDER BY и.псевдоним;

-- 4. Названия альбомов, содержащих наименьшее количество треков
SELECT 
    а.название as альбом,
    COUNT(т.id) as количество_треков
FROM альбомы а
JOIN треки т ON а.id = т.альбом_id
GROUP BY а.id, а.название
HAVING COUNT(т.id) = (
    SELECT MIN(тк.количество)
    FROM (
        SELECT COUNT(т2.id) as количество
        FROM альбомы а2
        JOIN треки т2 ON а2.id = т2.альбом_id
        GROUP BY а2.id
    ) as тк
)
ORDER BY а.название;